<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="cn.tedu.storeexe.mapper.UserMapper">
	
	<!-- 查询结果与用户数据实体的映射 -->
	<resultMap type="cn.tedu.storeexe.entity.User" id="userEntityMap">
		<id column="uid" property="uid"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
	    <result column="salt" property="salt"/>
	    <result column="gender" property="gender"/>
	    <result column="phone" property="phone"/>
	    <result column="email" property="email"/>
	    <result column="avatar" property="avatar"/>
	    <result column="is_delete" property="isDelete"/>
	    <result column="created_user" property="createdUser"/>
	    <result column="created_time" property="createdTime"/>
	    <result column="modified_user" property="modifiedUser"/>
	    <result column="modified_time" property="modifiedTime"/>
	</resultMap>
	
	<!-- 1. 插入用户数据 -->
	<!-- Integer addnew(User user); -->
	<insert id="addnew" useGeneratedKeys="true" keyProperty="uid">
		INSERT INTO t_user(
			username,password,
			salt,gender,
			phone,email,
			avatar,is_delete,
			created_user,created_time,
			modified_user,modified_time
		) VALUES(
			#{username},#{password},
			#{salt},#{gender},
			#{phone},#{email},
			#{avatar},#{isDelete},
			#{createdUser},#{createdTime},
			#{modifiedUser},#{modifiedTime}
		)		
	</insert>
	
	<!-- 2. 根据用户名查询用户数据 -->
	<!-- User findByUsername(String username); -->
	<select id="findByUsername" resultType="cn.tedu.storeexe.entity.User">
		SELECT 
			uid, username,
			password, salt,
			avatar, is_delete AS isDelete
		FROM 
			t_user
		WHERE 
			username=#{username}
	</select>
	
	<!-- 3. 修改密码 -->
	<!-- Integer updatePassword(
				@Param("uid") Integer uid,
				@Param("password") String password, 
				@Param("modifiedUser") String modifiedUser, 
				@Param("modifiedTime") Date modifiedTime);
 	-->
	<update id="updatePassword">
		UPDATE 
			t_user
		SET
			password=#{password},
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		WHERE
			uid=#{uid}	
	</update>
	
	<!-- 4. 根据uid查询用户数据 -->
	<!-- User findByUid(String uid); -->
	<select id="findByUid" resultMap="userEntityMap">
		SELECT 
			password,salt,
			is_delete,username,
			phone,email,
			gender,avatar
		FROM
			t_user
		WHERE
			uid=#{uid}
	</select>
	
	<!-- 5. 修改信息 -->
	<!-- Integer updateInfo(User user); -->
	<update id="updateInfo">
		UPDATE
			t_user
		SET
			phone=#{phone},email=#{email},
			gender=#{gender},modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		WHERE
			uid=#{uid}
	</update>
	
	<!-- 6. 修改头像 -->
	<!-- Integer updateAvatar(@Param("uid") Integer uid, 
	@Param("avatar") String avatar, 
	@Param("modifiedUser") String modifiedUser, 
	@Param("modifiedTime") Date modifiedTime); -->
	<update id="updateAvatar">
		UPDATE
			t_user
		SET
			avatar=#{avatar},modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		WHERE
			uid=#{uid}
	</update>
	
</mapper>













