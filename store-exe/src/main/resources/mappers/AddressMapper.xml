<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="cn.tedu.storeexe.mapper.AddressMapper">
	
	<!-- 查询结果与收货地址数据实体的映射 -->
	<resultMap type="cn.tedu.storeexe.entity.Address" id="addressEntityMap">
		<id column="aid" property="aid"/>
		<result column="uid" property="uid"/>
		<result column="name" property="name"/>
		<result column="province_code" property="provinceCode"/>
	    <result column="province_name" property="provinceName"/>
	    <result column="city_code" property="cityCode"/>
	    <result column="city_name" property="cityName"/>
	    <result column="area_code" property="areaCode"/>
	    <result column="area_name" property="areaName"/>
	    <result column="zip" property="zip"/>
	    <result column="address" property="address"/>
	    <result column="phone" property="phone"/>
	    <result column="tel" property="tel"/>
	    <result column="tag" property="tag"/>    
	    <result column="is_default" property="isDefault"/>
	  	<result column="created_user" property="createdUser"/>
	    <result column="created_time" property="createdTime"/>
	    <result column="modified_user" property="modifiedUser"/>
	    <result column="modified_time" property="modifiedTime"/>
	</resultMap>
	
	<!-- 1. 插入收货地址数据 -->
	<!-- Integer addnew(Address address); -->
	<insert id="addnew" useGeneratedKeys="true" keyProperty="aid">
		INSERT INTO t_address(
			uid,name,
			province_code,province_name,
			city_code,city_name,
			area_code,area_name,
			zip,address,
			phone,tel,
			tag,is_default,
			created_user,created_time,
			modified_user,modified_time
		) VALUES(
			#{uid},#{name},
			#{provinceCode},#{provinceName},
			#{cityCode},#{cityName},
			#{areaCode},#{areaName},
			#{zip},#{address},
			#{phone},#{tel},
			#{tag},#{isDefault},
			#{createdUser},#{createdTime},
			#{modifiedUser},#{modifiedTime}
		)		
	</insert>
	
	<!-- 2. 根据uid统计用户的收货地址数量 -->
	<!-- Integer countByUid(Integer uid); -->
	<select id="countByUid" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM
			t_address
		WHERE
			uid=#{uid}
	</select>
	
	<!-- 3.根据uid查询用户的收货地址信息 -->
	<!-- List<Address> findByUid(Integer uid); -->
	<select id="findByUid" resultMap="addressEntityMap">
		SELECT 
			*
		FROM
			t_address
		WHERE
			uid=#{uid}
		ORDER BY
			is_default DESC,
			modified_time DESC
	</select>
	
	<!-- 4. 根据aid将指定的收货地址设置为默认 -->
	<!-- Integer updateDefault(@Param("aid")Integer aid, 
							@Param("username") Date username, 
							@Param("modifiedTime") String modifiedTime); -->
	<update id="updateDefault">
		UPDATE 
			t_address
		SET
			is_default=1,
			modified_user=#{username},
			modified_time=#{modifiedTime}
		WHERE
			aid=#{aid}
	</update>
	
	<!-- 5. 根据uid将收货地址都修改为非默认 -->
	<!-- Integer updateNonDefault(Integer uid); -->
	<update id="updateNonDefault">
		UPDATE
			t_address
		SET
			is_default=0
		WHERE
			uid=#{uid}
	</update>
	
	<!-- 6. 根据aid查询收货地址信息 -->
	<!-- Address findByAid(Integer aid); -->
	<select id="findByAid" resultMap="addressEntityMap">
		SELECT
			*
		FROM
			t_address
		WHERE
			aid=#{aid}
	</select>
	
	<!-- 7. 根据aid删除用户收货地址 -->
	<!-- Integer deleteByAid(Integer aid); -->
	<delete id="deleteByAid">
		DELETE FROM 
			t_address
		WHERE
			aid=#{aid}		
	</delete>
	
	<!-- 8. 查询某用户最后修改的收货地址数据-->
	<!-- Address findLastModified(Integer uid); -->
	<select id="findLastModified" resultMap="addressEntityMap">
		SELECT
			*
		FROM
			t_address
		WHERE
			uid=#{uid}
		ORDER BY
			modified_time 
		DESC
		LIMIT
			0,1
	</select>
	
</mapper>













